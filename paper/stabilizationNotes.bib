@FOOTNOTE{Note1,key="Note1",note="For our non-interacting model system one can alternatively simply diagonalize the Hamiltonian and calculate the Green's function exactly"}
@FOOTNOTE{Note2,key="Note2",note="Note that we do not discuss the option to calculate $B^M$ as $U D^M X$. This is intentional since most real systems will involve fermion-boson interactions and the slice matrices will depend on $\phi (\tau )$."}
@FOOTNOTE{Note3,key="Note3",note="Note that Fortran LAPACK functions are named according to realness and symmetries of the matrix. In Julia multiple-dispatch takes care of routing different matrix types to different \protect \textit  {methods}. The Julia function \protect \texttt  {gesdd} works for both real and complex matrices, i.e. there is no (need for) \protect \texttt  {cgesdd}."}
@FOOTNOTE{Note4,key="Note4",note="\protect \leavevmode {\protect \color  {red}LAPACK SVD error bounds \cite {errorbounds} '\protect \textit  {Thus large singular values (those near $\sigma _1$) are computed to high relative accuracy and small ones may not be.}'}"}
@FOOTNOTE{Note5,key="Note5",note="For local updates on can generally avoid full calculations of Green's function determinants by exploiting locality and performing a Laplace expansion since only ratios of determinants appear in Eq.~\ref {eq:metropolis}. In fact, in an optimal implementation the computation of the acceptance rate is $O(1)$ rather than $O(N^3)$."}
@CONTROL{REVTEX42Control}
@CONTROL{apsrev42Control,author="08",editor="1",pages="0",title="0",year="1"}
